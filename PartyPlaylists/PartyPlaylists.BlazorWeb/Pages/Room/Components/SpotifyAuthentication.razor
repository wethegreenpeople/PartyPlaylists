@inject NavigationManager NavigationManager
@inject IConfiguration Configuration
@inject UserAccountsService UserAccountsService

@using SpotifyApi.NetCore;
@using Microsoft.Extensions.Configuration;

@if (Room != null)
{
    @if (!Room.IsSpotifyEnabled)
    {
        <button @onclick="RedirectToSpotify">Authenticate Spotify</button>
    }
}

@code {
    [Parameter] public PartyPlaylists.Models.DataModels.Room Room { get; set; }

    private IConfiguration _configuration;

    public void RedirectToSpotify()
    {
        var stateCode = Room.Id.ToString();
        string url = UserAccountsService.AuthorizeUrl(stateCode, new[] { "user-read-playback-state streaming user-read-private user-read-email playlist-read-private user-library-read playlist-modify-public playlist-modify-private" });

        var client = new HttpClient();
        NavigationManager.NavigateTo($"{url}");
    }
}
